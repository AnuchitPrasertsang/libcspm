channel c : {0, 1}

P(x) = let Q = c.x -> STOP within Q

-- procTest1 = P(0) ||| P(1)

procTest2 = c?x -> let Q = c!x -> STOP within Q

Z(x) = \ y @ y -> x

procTest3 = Z(STOP)(c.0) ||| Z(STOP)(c.1)

recursion(x) = (\ y @ let P = c.x+y -> STOP within P)

procTest4 = recursion(0)(0) ||| recursion(0)(1)

procTest5 = [] x : {let Q = c.x -> STOP within Q | x <- {0,1}} @ x

procTest6 = [] x : {0,1} @ let Q = c.x -> STOP within Q
